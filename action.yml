name: "Simple Commit and Push"

author: "ryohidaka"

description: "GitHub Actions for committing & pushing to GitHub repository local changes."

branding:
  color: green
  icon: git-commit

inputs:
  files:
    description: "Files to commit. Defaults to '.'."
    required: false
    default: "."

  branch:
    required: false
    default: ""
    description: "The branch to push changes to. Defaults to the current branch."

  commit-user-name:
    required: false
    default: "github-actions[bot]"
    description: "Commit username. Defaults to 'github-actions[bot]'."

  commit-user-email:
    required: false
    default: "41898282+github-actions[bot]@users.noreply.github.com"
    description: "Commit email. Defaults to '41898282+github-actions[bot]@users.noreply.github.com'."

  commit-message:
    required: false
    default: "chore: autopublish"
    description: "Commit message. Defaults to 'chore: autopublish'."

  rebase:
    required: false
    default: "false"
    description: "If true, `git pull --rebase` is used before the push. Defaults to 'false'"

  force-push:
    required: false
    default: "false"
    description: "If true, `git push --force` is used. Defaults to 'false'"

  dry-run:
    required: false
    default: "false"
    description: "If true, the push steps will be skipped. Defaults to 'false'"

runs:
  using: "composite"
  steps:
    - name: Set GitHub Path
      run: echo "GITHUB_ACTION_PATH=${GITHUB_ACTION_PATH}" >> $GITHUB_ENV
      shell: bash

    - name: Set Git Config
      run: |
        $GITHUB_ACTION_PATH/scripts/set_config.sh \
          "${{ inputs.commit-user-name }}" \
          "${{ inputs.commit-user-email }}"
      shell: bash

    - name: Staging And Check Diff
      id: check_diff
      run: |
        $GITHUB_ACTION_PATH/scripts/check_diff.sh \
          "${{ inputs.files }}"
      shell: bash

    - name: Commit
      if: steps.check_diff.outputs.changes == 'true' # Skip if no changes
      run: |
        $GITHUB_ACTION_PATH/scripts/commit.sh \
          "${{ inputs.commit-message }}"
      shell: bash

    - name: Push
      if: steps.check_diff.outputs.changes == 'true' && inputs.dry-run != 'true' # Skip if no changes
      run: |
        $GITHUB_ACTION_PATH/scripts/push.sh \
          "${{ inputs.rebase }}" \
          "${{ inputs.branch || github.ref_name }}" \
          "${{ inputs.force-push }}"
      shell: bash
